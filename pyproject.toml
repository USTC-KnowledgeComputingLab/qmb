[build-system]
requires = ["setuptools>=69.5", "setuptools_scm>=8.1", "pybind11>=2.13"]
build-backend = "setuptools.build_meta"

[project]
name = "qmp"
dynamic = ["version"]
dependencies = ["numpy", "scipy", "torch", "openfermion"]
requires-python = ">=3.12"
authors = [{ name = "Hao Zhang", email = "hzhangxyz@outlook.com" }]
description = "Quantum Manybody Problem"
readme = "README.md"
license = {text = "GPLv3"}
keywords = ["quantum", "manybody", "quantum-chemistry", "quantum-simulation", "molecular-simulation", "algorithms", "simulation", "wave-function", "ground-state", "ansatz", "torch", "pytorch"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Programming Language :: C++",
  "Programming Language :: Python :: 3",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering :: Physics",
  "Topic :: Scientific/Engineering :: Chemistry",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://github.com/USTC-KnowledgeComputingLab/qmp"
Documentation = "https://github.com/USTC-KnowledgeComputingLab/qmp"
Repository = "https://github.com/USTC-KnowledgeComputingLab/qmp.git"
Issues = "https://github.com/USTC-KnowledgeComputingLab/qmp/issues"

[project.scripts]
qmp-learn = "qmp.learn:main"
qmp-vmc = "qmp.vmc:main"
qmp-iter = "qmp.iter:main"

[tool.setuptools.packages.find]
include = ["qmp"]

[tool.setuptools_scm]
version_file = "qmp/_version.py"

[tool.yapf]
based_on_style = "google"
column_limit = 200

[tool.cibuildwheel.linux]
archs = ["x86_64", "i686", "aarch64", "ppc64le", "s390x"]

[tool.cibuildwheel.macos]
archs = ["x86_64", "arm64", "universal2"]

[tool.cibuildwheel.windows]
archs = ["AMD64", "x86", "ARM64"]
